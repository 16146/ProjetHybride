{"version":3,"sources":["src/app/edit-note/edit-note.page.html","src/app/edit-note/edit-note-routing.module.ts","src/app/edit-note/edit-note.module.ts","src/app/edit-note/edit-note.page.scss","src/app/edit-note/edit-note.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,igFAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,4CAAA,CAAA,cAAA;AAFb,KADqB,CAAvB;;AAWA,QAAa,yBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,yBAAyB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJrC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAIqC,CAAA,EAAzB,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIb,QAAa,kBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAV9B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,2CAAA,CAAA,qBAAA,CAJO,EAKP,sDAAA,CAAA,2BAAA,CALO,CADD;AAQR,MAAA,YAAY,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AARN,KAAT,CAU8B,CAAA,EAAlB,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACpBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6LAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcf,QAAa,YAAb;AA6FE,4BAA6D,GAA7D,EAAyF,WAAzF,EAA0H,iBAA1H,EAAuK,KAAvK,EAAsM,MAAtM,EAAoN;AAAA;;AAAvJ,aAAA,GAAA,GAAA,GAAA;AAA4B,aAAA,WAAA,GAAA,WAAA;AAAiC,aAAA,iBAAA,GAAA,iBAAA;AAA6C,aAAA,KAAA,GAAA,KAAA;AAA+B,aAAA,MAAA,GAAA,MAAA;AAxFtM,aAAA,WAAA,GAAc,KAAd;AAyFE,QAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACA;;AA/FJ;AAAA;AAAA,mCAOU;AACN,eAAK,SAAL,GAAiB,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AACtC,YAAA,KAAK,EAAE,CAAC,EAAD,EAAK,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAsB,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,CAArB,CAAtB,CAAL,CAD+B;AAEtC,YAAA,OAAO,EAAE,CAAC,EAAD,EAAK,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAsB,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,CAArB,CAAtB,CAAL,CAF6B;AAGtC,YAAA,QAAQ,EAAG,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,CAH2B,CAKtC;AACA;AACA;;AAPsC,WAAvB,CAAjB;AASA,eAAK,OAAL,CAAa,KAAK,KAAL,CAAW,QAAX,CAAoB,QAApB,CAA6B,GAA7B,CAAiC,IAAjC,CAAb;AACA,eAAK,aAAL;AACD;AAnBH;AAAA;AAAA,gCAuBgB,EAvBhB,EAuBkB;;;;;;;;;;AACE,2BAAM,KAAK,iBAAL,CAAuB,MAAvB,CAA8B;AAClD,sBAAA,OAAO,EAAE;AADyC,qBAA9B,CAAN;;;AAAV,oBAAA,O;;AAGN,2BAAM,OAAO,CAAC,OAAR,EAAN;;;;AACA,2BAAM,KAAK,GAAL,CAAS,WAAT,CAAqB,EAArB,EAAyB,SAAzB,CAAmC,UAAA,GAAG,EAAG;AAC7C,sBAAA,KAAI,CAAC,SAAL,CAAe,QAAf,CAAwB,OAAxB,EAAiC,QAAjC,CAA0C,GAAG,CAAC,KAA9C;;AACA,sBAAA,KAAI,CAAC,SAAL,CAAe,QAAf,CAAwB,SAAxB,EAAmC,QAAnC,CAA4C,GAAG,CAAC,OAAhD;;AACA,sBAAA,KAAI,CAAC,SAAL,CAAe,QAAf,CAAwB,UAAxB,EAAoC,QAApC,CAA6C,GAAG,CAAC,QAAjD;;AACA,sBAAA,OAAO,CAAC,GAAR,CAAY,KAAI,CAAC,SAAjB;AACA,sBAAA,KAAI,CAAC,IAAL,GAAY,GAAZ;AACA,sBAAA,OAAO,CAAC,OAAR;AACD,qBAPK,EAOH,UAAA,GAAG,EAAG;AACP,sBAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACA,sBAAA,OAAO,CAAC,OAAR;AACD,qBAVK,CAAN;;;;;;;;;AAWD;AAvCH;AAAA;AAAA,wCAwCqB;;;;;;;;;;AACD,2BAAM,KAAK,iBAAL,CAAuB,MAAvB,CAA8B;AAClD,sBAAA,OAAO,EAAE;AADyC,qBAA9B,CAAN;;;AAAV,oBAAA,O;;AAGN,2BAAM,OAAO,CAAC,OAAR,EAAN;;;;AACA,2BAAM,KAAK,GAAL,CAAS,YAAT,GACH,SADG,CACO,UAAA,GAAG,EAAG;AACf,sBAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACA,sBAAA,MAAI,CAAC,UAAL,GAAkB,GAAlB;AACA,sBAAA,OAAO,CAAC,OAAR;AACD,qBALG,EAKD,UAAA,GAAG,EAAG;AACP,sBAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACA,sBAAA,OAAO,CAAC,OAAR;AACD,qBARG,CAAN;;;;;;;;;AASD;AAtDH;AAAA;AAAA,qCA2DY;AACR,eAAK,WAAL,GAAmB,IAAnB;;AACA,cAAI,CAAC,KAAK,SAAL,CAAe,KAApB,EAA2B;AACzB,YAAA,OAAO,CAAC,GAAR,CAAY,yCAAZ;AACA,mBAAO,KAAP;AACD,WAHD,MAGO;AACL,YAAA,OAAO,CAAC,GAAR,CAAY,KAAK,SAAL,CAAe,KAA3B;AACD;AACF;AAnEH;AAAA;AAAA,yCAoEgB;AACZ,iBAAO,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AAC5B,YAAA,YAAY,EAAE;AADc,WAAvB,CAAP;AAGD;AAxEH;AAAA;AAAA,qCA0EkB;;;;;;;;AACd,yBAAK,QAAL,GAAgB,KAAK,SAAL,CAAe,KAAf,CAAqB,QAArB,CAA8B,KAA9B,CAAoC,KAApC,CAAhB;AACA,yBAAK,IAAL,GAAY;AACV,+BAAQ,KAAK,SAAL,CAAe,KAAf,CAAqB,OAArB,CADE;AAEV,iCAAU,KAAK,SAAL,CAAe,KAAf,CAAqB,SAArB,CAFA;AAGV,kCAAY;AACV,8BAAO,MAAM,CAAC,KAAK,QAAL,CAAc,CAAd,CAAD,CADH;AAEV,gCAAS,KAAK,QAAL,CAAc,CAAd;AAFC;AAHF,qBAAZ;AAQA,oBAAA,OAAO,CAAC,GAAR,CAAY,KAAK,IAAjB;;AACA,2BAAM,KAAK,GAAL,CAAS,UAAT,CAAoB,KAAK,KAAL,CAAW,QAAX,CAAoB,QAApB,CAA6B,GAA7B,CAAiC,IAAjC,CAApB,EAA4D,KAAK,IAAjE,EACL,SADK,CACK,UAAA,GAAG,EAAG;AACf,sBAAA,MAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACC,qBAHG,EAGD,UAAC,GAAD,EAAQ;AACT,sBAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACD,qBALG,CAAN;;;;;;;;;AAMD;AA3FH;AAAA;AAAA,4BAuDkB;AACd,iBAAO,KAAK,SAAL,CAAe,QAAtB;AACD;AAzDH;;AAAA;AAAA,OAAA;;;;cA6FoE,8CAAA,CAAA,gBAAA,C;AAAc,QAAA,UAAA,EAAA,CAAA;AAAA,UAAA,IAAA,EAAnE,0CAAA,CAAA,QAAA,CAAmE;AAA7D,UAAA,IAAA,EAAA,CAAC,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AAAA,mBAAM,8CAAA,CAAA,gBAAA,CAAN;AAAA,WAAX,CAAD;AAA6D,SAAA;;cAAsB,2CAAA,CAAA,aAAA;;cAAuC,2CAAA,CAAA,mBAAA;;cAAiC,4CAAA,CAAA,gBAAA;;cAAgC,4CAAA,CAAA,QAAA;;;;AA7FnM,IAAA,YAAY,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALxB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,eADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,qFAAA,CAAA,YAFS;;;;AAAA,KAAV,CAKwB,EA6FV,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,CAAO,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AAAA,aAAM,8CAAA,CAAA,gBAAA,CAAN;AAAA,KAAX,CAAP,CAAA,CA7FU,E,uEA6F2C,8CAAA,CAAA,gBAAA,C,EAAoC,2CAAA,CAAA,aAAA,C,EAAuC,2CAAA,CAAA,mBAAA,C,EAAiC,4CAAA,CAAA,gBAAA,C,EAAgC,4CAAA,CAAA,QAAA,C,EA7FvL,CAAA,EAAZ,YAAY,CAAZ","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Editer la note </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n    <form [formGroup]=\\\"ionicForm\\\" (ngSubmit)=\\\"submitForm()\\\" novalidate>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"floating\\\" >Entrer ici un titre</ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"title\\\" required></ion-input>\\n        </ion-item>\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.title.errors?.required\\\">\\n            title is required.\\n          </span>\\n          <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.title.errors?.minlength\\\">\\n              title should be min 2 chars long.\\n          </span>\\n          <ion-item lines=\\\"full\\\">\\n              <ion-label position=\\\"floating\\\" >Entrer ici une description</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"content\\\" required></ion-input>\\n          </ion-item>\\n          <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.content.errors?.required\\\">\\n              content is required.\\n              </span>\\n              <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.content.errors?.minlength\\\">\\n                  content should be min 2 chars long.\\n            </span>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-item>\\n            <ion-label value=\\\"cr.name\\\">Choisir une cat√©gorie</ion-label>\\n            <ion-select  formControlName=\\\"category\\\" >\\n              <ion-item *ngFor=\\\"let cr of classrooms\\\">\\n                <ion-select-option value=\\\"{{cr.id}}&&&{{cr.name}}\\\">{{cr.name}}</ion-select-option>\\n              </ion-item>\\n            </ion-select>\\n          </ion-item>\\n        </ion-item>\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.category.errors?.required\\\">\\n          category is required.\\n        </span>\\n        <!-- Checkboxes -->\\n        <!-- <ion-list lines=\\\"full\\\">\\n          <ion-list-header>\\n            <ion-label>Subjects</ion-label>\\n          </ion-list-header>\\n          <ion-item>\\n            <ion-label>History</ion-label>\\n            <ion-checkbox></ion-checkbox>\\n          </ion-item>\\n        </ion-list> -->\\n        <ion-row>\\n          <ion-col>\\n            <ion-button [disabled]=\\\"!ionicForm.valid\\\" type=\\\"submit\\\" color=\\\"danger\\\" expand=\\\"block\\\" (click)=\\\"updateNote()\\\">Enregistrer</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </form>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditNotePage } from './edit-note.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditNotePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditNotePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditNotePageRoutingModule } from './edit-note-routing.module';\n\nimport { EditNotePage } from './edit-note.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    EditNotePageRoutingModule\n  ],\n  declarations: [EditNotePage]\n})\nexport class EditNotePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtbm90ZS9lZGl0LW5vdGUucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, Injectable, Inject, forwardRef } from '@angular/core';\nimport { RestApiService } from '../rest-api.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoadingController } from '@ionic/angular';\nimport { HttpClient, HttpHeaders, HttpErrorResponse,HttpClientModule } from '@angular/common/http';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators, FormArray } from '@angular/forms';\nimport { ActivatedRoute, Router  } from '@angular/router';\nimport { CategoriesPage } from '../categories/categories.page';\n\n@Component({\n  selector: 'app-edit-note',\n  templateUrl: './edit-note.page.html',\n  styleUrls: ['./edit-note.page.scss'],\n})\nexport class EditNotePage implements OnInit {\n  ionicForm: FormGroup;\n\n  categories: FormArray;\n  category : FormArray;\n  isSubmitted = false;\n\n  ngOnInit() {\n    this.ionicForm = this.formBuilder.group({\n      title: ['', [Validators.required, Validators.minLength(2)]],\n      content: ['', [Validators.required, Validators.minLength(2)]],\n      category:  new FormControl([])\n\n      // email: ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]],\n      // dob: [this.defaultDate],\n      // mobile: ['', [Validators.required, Validators.pattern('^[0-9]+$')]]\n    })\n    this.getNote(this.route.snapshot.paramMap.get('id'));\n    this.getClassrooms();\n  }\n\n  classrooms : any;\n  note : any;\n  async getNote(id) {\n    const loading = await this.loadingController.create({\n      message: 'Loading'\n    });\n    await loading.present();\n    await this.api.getNoteById(id).subscribe(res => {\n      this.ionicForm.controls[\"title\"].setValue(res.title);\n      this.ionicForm.controls[\"content\"].setValue(res.content);\n      this.ionicForm.controls[\"category\"].setValue(res.category);\n      console.log(this.ionicForm);\n      this.note = res;\n      loading.dismiss();\n    }, err => {\n      console.log(err);\n      loading.dismiss();\n    });\n  }\n  async getClassrooms() {\n    const loading = await this.loadingController.create({\n      message: 'Loading'\n    });\n    await loading.present();\n    await this.api.getClassroom()\n      .subscribe(res => {\n        console.log(res);\n        this.classrooms = res;\n        loading.dismiss();\n      }, err => {\n        console.log(err);\n        loading.dismiss();\n      });\n  }\n  get errorControl() {\n    return this.ionicForm.controls;\n  }\n\n  submitForm() {\n    this.isSubmitted = true;\n    if (!this.ionicForm.valid) {\n      console.log('Please provide all the required values!')\n      return false;\n    } else {\n      console.log(this.ionicForm.value)\n    }\n  }\n  createCategory(): FormGroup {\n    return this.formBuilder.group({\n      student_name: ''\n    });\n  }\n  \n  async updateNote(){\n    this.category = this.ionicForm.value.category.split('&&&');\n    this.note = {\n      \"title\":this.ionicForm.value[\"title\"],\n      \"content\":this.ionicForm.value[\"content\"],\n      \"category\": { \n        \"id\" : Number(this.category[0]), \n        \"name\" : this.category[1],   \n      },\n    }\n    console.log(this.note);\n    await this.api.updateNote(this.route.snapshot.paramMap.get('id'), this.note)\n    .subscribe(res => {\n      this.router.navigate(['/notes']);\n      }, (err) => {\n        console.log(err);\n      });\n  }\n  \n  constructor(@Inject(forwardRef(() => RestApiService)) public api: RestApiService, public formBuilder: FormBuilder, public loadingController: LoadingController,private route: ActivatedRoute, private router: Router) {\n    console.log(api);\n   }\n\n}\n"],"sourceRoot":"webpack:///","file":"edit-note-edit-note-module-es5.js"}