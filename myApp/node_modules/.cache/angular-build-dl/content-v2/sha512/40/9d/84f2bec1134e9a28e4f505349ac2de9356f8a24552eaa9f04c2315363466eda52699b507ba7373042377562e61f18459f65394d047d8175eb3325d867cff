{"version":3,"sources":["./src/app/add-note/add-note.page.html","./src/app/add-note/add-note-routing.module.ts","./src/app/add-note/add-note.module.ts","./src/app/add-note/add-note.page.scss","./src/app/add-note/add-note.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,koDAAmkD,OAAO,KAAK,SAAS,KAAK,SAAS,u0B;;;;;;;;;;;;;;;;;;;ACA5kD;AACc;AAET;AAE9C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,0DAAW;KACvB;CACF,CAAC;AAMF,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;CAAG;AAA3B,wBAAwB;IAJpC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBI;AACM;AACmB;AAErB;AAEwB;AAEvB;AAY9C,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;AAApB,iBAAiB;IAV7B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,kEAAmB;YACnB,iFAAwB;SACzB;QACD,YAAY,EAAE,CAAC,0DAAW,CAAC;KAC5B,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;ACpB9B;AAAe,6GAA8C,2I;;;;;;;;;;;;;;;;;;;;;ACAqB;AAC7B;AAEF;AAEqE;AAC9D;AAS1D,IAAa,WAAW,GAAxB,MAAa,WAAW;IA4EtB,YAA6D,GAAmB,EACzE,WAAwB,EAAS,iBAAoC,EACpE,MAAc;QAFuC,QAAG,GAAH,GAAG,CAAgB;QACzE,gBAAW,GAAX,WAAW,CAAa;QAAS,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpE,WAAM,GAAN,MAAM,CAAQ;QArEtB,gBAAW,GAAG,KAAK,CAAC;QAsElB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAElB,CAAC;IArEF,aAAa;QAET,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IACrC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,QAAQ,EAAG,IAAI,0DAAW,CAAC,EAAE,CAAC;YAE9B,qGAAqG;YACrG,2BAA2B;YAC3B,sEAAsE;SACvE,CAAC;QACF,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IACK,aAAa;;YACjB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAClD,OAAO,EAAE,SAAS;aACnB,CAAC,CAAC;YACH,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;YACxB,MAAM,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE;iBAC1B,SAAS,CAAC,GAAG,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;gBACtB,OAAO,CAAC,OAAO,EAAE,CAAC;YACpB,CAAC,EAAE,GAAG,CAAC,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,OAAO,CAAC,OAAO,EAAE,CAAC;YACpB,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;IACD,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC;YACtD,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;SAClC;IACH,CAAC;IACK,QAAQ;;YACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3D,IAAI,CAAC,IAAI,GAAG;gBACV,OAAO,EAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC;gBACrC,SAAS,EAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC;gBACzC,UAAU,EAAE;oBACV,IAAI,EAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC/B,MAAM,EAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAC1B;aACF;YACD,OAAO,CAAC,GAAG,CAAC,KAAK,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;iBACjC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEnC,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACR,CAAC;KAAA;CAQF;;YAPmE,gEAAc,uBAAnE,oDAAM,SAAC,gEAAU,CAAC,GAAG,EAAE,CAAC,gEAAc,CAAC;YAChC,0DAAW;YAA4B,gEAAiB;YAC5D,sDAAM;;AA9EX,WAAW;IALvB,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,kNAAmC;;KAEpC,CAAC;IA6Ea,6GAAM,CAAC,gEAAU,CAAC,GAAG,EAAE,CAAC,gEAAc,CAAC,CAAC;2EAAa,gEAAc;QAC5D,0DAAW,EAA4B,gEAAiB;QAC5D,sDAAM;GA9EX,WAAW,CAmFvB;AAnFuB","file":"add-note-add-note-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n      <ion-title>Ajouter une nouvelle note</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  <ion-content>\\n    <form [formGroup]=\\\"ionicForm\\\" (ngSubmit)=\\\"submitForm()\\\" novalidate>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"floating\\\" >Entrer ici un titre</ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"title\\\" required></ion-input>\\n      </ion-item>\\n      <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.title.errors?.required\\\">\\n          title is required.\\n        </span>\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.title.errors?.minlength\\\">\\n            title should be min 2 chars long.\\n        </span>\\n        <ion-item lines=\\\"full\\\">\\n            <ion-label position=\\\"floating\\\" >Entrer ici une description</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"content\\\" required></ion-input>\\n        </ion-item>\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.content.errors?.required\\\">\\n            content is required.\\n            </span>\\n            <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.content.errors?.minlength\\\">\\n                content should be min 2 chars long.\\n          </span>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-item>\\n          <ion-label>Choisir une cat√©gorie</ion-label>\\n          <ion-select value=\\\"Brown\\\" formControlName=\\\"category\\\">\\n            <ion-item *ngFor=\\\"let cr of classrooms\\\">\\n              <ion-select-option value=\\\"{{cr.id}}&&&{{cr.name}}\\\">{{cr.name}}</ion-select-option>\\n            </ion-item>\\n          </ion-select>\\n        </ion-item>\\n      </ion-item>\\n      <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.category.errors?.required\\\">\\n        category is required.\\n      </span>\\n      <!-- Checkboxes -->\\n      <!-- <ion-list lines=\\\"full\\\">\\n        <ion-list-header>\\n          <ion-label>Subjects</ion-label>\\n        </ion-list-header>\\n        <ion-item>\\n          <ion-label>History</ion-label>\\n          <ion-checkbox></ion-checkbox>\\n        </ion-item>\\n      </ion-list> -->\\n      <ion-row>\\n        <ion-col>\\n          <ion-button [disabled]=\\\"!ionicForm.valid\\\" type=\\\"submit\\\" color=\\\"danger\\\" expand=\\\"block\\\" (click)=\\\"saveNote()\\\">Enregistrer</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </form>\\n  </ion-content>\\n  \\n  \"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddNotePage } from './add-note.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddNotePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddNotePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddNotePageRoutingModule } from './add-note-routing.module';\n\nimport { AddNotePage } from './add-note.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    AddNotePageRoutingModule\n  ],\n  declarations: [AddNotePage]\n})\nexport class AddNotePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1ub3RlL2FkZC1ub3RlLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, Injectable, Inject, forwardRef } from '@angular/core';\nimport { RestApiService } from '../rest-api.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoadingController } from '@ionic/angular';\nimport { HttpClient, HttpHeaders, HttpErrorResponse,HttpClientModule } from '@angular/common/http';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators, FormArray } from '@angular/forms';\nimport { ActivatedRoute, Router  } from '@angular/router';\nimport { CategoriesPage } from '../categories/categories.page';\nimport { notEqual } from 'assert';\n\n@Component({\n  selector: 'app-add-note',\n  templateUrl: './add-note.page.html',\n  styleUrls: ['./add-note.page.scss'],\n})\nexport class AddNotePage implements OnInit {\n  ionicForm: FormGroup;\n  classrooms : any;\n  category : FormArray;\n  note: any ;\n  id : any;\n  name: any; \n  categories : FormArray;\n\n  isSubmitted = false;\n\n  \n  createNewTask()\n  {\n      console.log(this.ionicForm.value)\n  }\n\n  ngOnInit() {\n    this.ionicForm = this.formBuilder.group({\n      title: ['', [Validators.required, Validators.minLength(2)]],\n      content: ['', [Validators.required, Validators.minLength(2)]],\n      category:  new FormControl([])\n\n      // email: ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]],\n      // dob: [this.defaultDate],\n      // mobile: ['', [Validators.required, Validators.pattern('^[0-9]+$')]]\n    })\n    this.getClassrooms();\n  }\n  async getClassrooms() {\n    const loading = await this.loadingController.create({\n      message: 'Loading'\n    });\n    await loading.present();\n    await this.api.getClassroom()\n      .subscribe(res => {\n        console.log(res);\n        this.classrooms = res;\n        loading.dismiss();\n      }, err => {\n        console.log(err);\n        loading.dismiss();\n      });\n  }\n  get errorControl() {\n    return this.ionicForm.controls;\n  }\n\n  submitForm() {\n    this.isSubmitted = true;\n    if (!this.ionicForm.valid) {\n      console.log('Please provide all the required values!')\n      return false;\n    } else {\n      console.log(this.ionicForm.value)\n    }\n  }\n  async saveNote(){\n    this.category = this.ionicForm.value.category.split('&&&');\n    this.note = {\n      \"title\":this.ionicForm.value[\"title\"],\n      \"content\":this.ionicForm.value[\"content\"],\n      \"category\": { \n        \"id\" : Number(this.category[0]), \n        \"name\" : this.category[1],   \n      },\n    }\n    console.log(\"grr\",this.note);\n     await this.api.postNote(this.note)\n     .subscribe(res => {\n         this.router.navigate(['/notes']);\n      \n       }, (err) => {\n         console.log(err);\n       });\n  }\n  constructor(@Inject(forwardRef(() => RestApiService)) public api: RestApiService, \n  public formBuilder: FormBuilder, public loadingController: LoadingController, \n  private router: Router) {\n    console.log(api);\n\n   }\n\n}\n\n"],"sourceRoot":"webpack:///"}